@model CuentaCreacionViewModel
@{
    ViewData["Title"] = "Editar Cuenta";
}


<h1 class="mb-4"><i class="bi bi-pencil-square me-3 text-primary"></i>Editar Cuenta: @Model.Nombre</h1>

<div asp-validation-summary="ModelOnly" class="text-danger"></div>

<form asp-action="Editar" asp-controller="Cuentas">
    <input type="hidden" asp-for="Id" />
    <div class="mb-3">
        <label asp-for="Nombre" class="form-label page-description"></label>
        <input type="text" asp-for="Nombre" class="form-control" />
        <span asp-validation-for="Nombre" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="TipoCuentaId" class="form-label page-description"></label>
        <select asp-for="TipoCuentaId" asp-items="Model.TiposCuentas" class="form-select"></select>
        <span asp-validation-for="TipoCuentaId" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Balance" class="form-label page-description"></label>
        <div class="input-group">
            <select id="Operacion" class="form-select" style="max-width: 160px;">
                <option value="positivo">Suma (+)</option>
                <option value="negativo">Resta (-)</option>
            </select>
            <input type="text" asp-for="Balance" class="form-control" id="Balance" placeholder="Ej: 50.000" />
        </div>
    </div>

    <div class="mb-3">
        <label asp-for="Descripcion" class="form-label page-description"></label>
        <textarea asp-for="Descripcion" class="form-control"></textarea>
        <span asp-validation-for="Descripcion" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-outline-primary">Editar</button>
    <a class="btn btn-outline-secondary" asp-action="Index">Cancelar</a>
</form>



@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>

        const balanceInput = document.getElementById("Balance");
         const operacionSelect = document.getElementById("Operacion");

         //*******  Pone bonito el numero de Balance al Cargar ***********//

         // Obtenemos el valor crudo que viene del Modelo (ej: "5000.00" o "-2000,00")
         let rawValue = balanceInput.value;

         if (rawValue && rawValue !== "") {
             // Convertimos a número.
             // Usamos parseFloat y reemplazamos comas por puntos por si acaso.
             let numericValue = parseFloat(rawValue.replace(",", "."));

             // Ajustamos el <select> de Suma o Resta según el signo
             if (numericValue < 0) {
                 operacionSelect.value = "negativo";
             } else {
                 operacionSelect.value = "positivo";
             }

             // Tomamos el valor absoluto y lo redondeamos (asumiendo que no usas centavos)
             let absValue = Math.abs(Math.round(numericValue));

             // Ahora sí, formateamos solo el valor absoluto para mostrarlo
             balanceInput.value = absValue.toLocaleString('es-CO');
         }

         //******* 2. Reaplicar formato mientras se escribe ***********//
         balanceInput.addEventListener("input", (e) => {
             let valor = e.target.value.replace(/\D/g, ""); // eliminar todo excepto dígitos

             // Pequeña mejora: formatear solo si hay valor
             if (valor) {
                  e.target.value = new Intl.NumberFormat("es-CO").format(valor);
             } else {
                  e.target.value = ""; // Permitir que el campo quede vacío
             }
         });

         //******* 3. Quitar formato y aplicar signo antes de enviar  ***********//
         document.querySelector("form").addEventListener("submit", () => {
             // Quitar los puntos (separadores de mil de 'es-CO')
             let valorLimpio = balanceInput.value.replace(/\./g, "");

             if (operacionSelect.value === "negativo" && valorLimpio !== "") {
                 valorLimpio = "-" + valorLimpio;
             }

             // Pequeña mejora: si el valor queda vacío, enviar "0"
             if (valorLimpio === "" || valorLimpio === "-") {
                 valorLimpio = "0";
             }

             balanceInput.value = valorLimpio;
         });      
    </script>
}
