@model IEnumerable<TipoCuenta>

@{
    ViewData["Title"] = "Tipos de Cuentas";
}

<div class="page-header">
    <div class="header-content">
        <div class="header-text">
            <h1 class="page-title">
                <i class="bi bi-wallet2 me-2 text-primary"></i> Tipos de Cuentas
            </h1>
            <p class="page-description">
                Los tipos de cuenta permiten organizar tus finanzas agrupando movimientos según su naturaleza, por ejemplo: préstamos, tarjetas de crédito o cuentas bancarias
            </p>
        </div>
        <div class="header-action">
            <a asp-action="Crear" class="btn btn-primary btn-create shadow">
                <i class="bi bi-plus-lg me-2"></i> Crear nuevo
            </a>
        </div>
    </div>
</div>


<table class="table align-middle table-hover shadow-sm rounded-3 overflow-hidden">
    <thead class="table-light">
        <tr>
            <th style="width: 50px;"></th>
            <th>Acciones</th>
            <th>Nombre</th>
        </tr>
    </thead>
    <tbody id="reordenable">
        @foreach (var tipocuenta in Model)
        {
            <tr data-id="@tipocuenta.Id" class="draggable-row">
                <td class="handle text-center align-middle">
                    <input type="hidden" value="@tipocuenta.Id" class="ids"/>
                    <i class="bi bi-grip-vertical drag-icon"></i>
                </td>
                <td>
                    <a class="btn btn-outline-primary btn-sm me-1" asp-action="Editar" asp-route-id="@tipocuenta.Id">
                        <i class="bi bi-pencil-square"></i> Editar
                    </a>
                    <a class="btn btn-outline-danger btn-sm" asp-action="Borrar" asp-route-id="@tipocuenta.Id">
                        <i class="bi bi-trash"></i> Borrar
                    </a>
                </td>
                <td class="fw-semibold">@tipocuenta.Nombre</td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        const urlOrdenar = '@Url.Action("Ordenar")';

        $(function () {
            $("#reordenable").sortable({
                handle: ".handle",
                placeholder: "sortable-placeholder",
                start: function (event, ui) {
                    ui.item.addClass("dragging");
                },
                stop: async function (event, ui) {
                    ui.item.removeClass("dragging");
                    await actualizarOrdenes();
                }
            });

            async function actualizarOrdenes() {
                const ids = obtenerIdsDeElementos();
                await enviarIdsAlBackend(ids);
            }

            function obtenerIdsDeElementos() {
                return $("#reordenable")
                    .children()
                    .map(function () {
                        return $(this).data("id");
                    })
                    .get();
            }

            async function enviarIdsAlBackend(ids) {
                const data = JSON.stringify(ids);
                await fetch(urlOrdenar, {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: data
                });
            }
        });
    </script>
}
